"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = __importDefault(require("react"));
const react_dom_1 = __importDefault(require("react-dom"));
const App_1 = __importDefault(require("./App"));
const Context_1 = require("./Context");
const reportWebVitals_1 = __importDefault(require("./reportWebVitals"));
react_dom_1.default.render(<react_1.default.StrictMode>
    <Context_1.QuickstartProvider>
      <App_1.default />
    </Context_1.QuickstartProvider>
  </react_1.default.StrictMode>, document.getElementById("root"));
// If you want to start measuring performance in your app, pass a function
// to log results (for example: reportWebVitals(console.log))
// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals
reportWebVitals_1.default();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9xdWlja3N0YXJ0L2Zyb250ZW5kL3NyYy9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxZQUFZLENBQUM7QUFDYixJQUFJLGVBQWUsR0FBRyxDQUFDLElBQUksSUFBSSxJQUFJLENBQUMsZUFBZSxDQUFDLElBQUksVUFBVSxHQUFHO0lBQ2pFLE9BQU8sQ0FBQyxHQUFHLElBQUksR0FBRyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUUsU0FBUyxFQUFFLEdBQUcsRUFBRSxDQUFDO0FBQzlELENBQUMsQ0FBQztBQUNGLE1BQU0sQ0FBQyxjQUFjLENBQUMsT0FBTyxFQUFFLFlBQVksRUFBRSxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFDO0FBQzlELE1BQU0sT0FBTyxHQUFHLGVBQWUsQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQztBQUNsRCxNQUFNLFdBQVcsR0FBRyxlQUFlLENBQUMsT0FBTyxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUM7QUFDMUQsTUFBTSxLQUFLLEdBQUcsZUFBZSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO0FBQ2hELE1BQU0sU0FBUyxHQUFHLE9BQU8sQ0FBQyxXQUFXLENBQUMsQ0FBQztBQUN2QyxNQUFNLGlCQUFpQixHQUFHLGVBQWUsQ0FBQyxPQUFPLENBQUMsbUJBQW1CLENBQUMsQ0FBQyxDQUFDO0FBQ3hFLFdBQVcsQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxVQUFVLENBQ2xEO0lBQUEsQ0FBQyxTQUFTLENBQUMsa0JBQWtCLENBQzNCO01BQUEsQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLEFBQUQsRUFDaEI7SUFBQSxFQUFFLFNBQVMsQ0FBQyxrQkFBa0IsQ0FDaEM7RUFBQSxFQUFFLE9BQU8sQ0FBQyxPQUFPLENBQUMsVUFBVSxDQUFDLEVBQUUsUUFBUSxDQUFDLGNBQWMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO0FBQ2xFLDBFQUEwRTtBQUMxRSw2REFBNkQ7QUFDN0QsMEVBQTBFO0FBQzFFLGlCQUFpQixDQUFDLE9BQU8sRUFBRSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCByZWFjdF8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCJyZWFjdFwiKSk7XG5jb25zdCByZWFjdF9kb21fMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwicmVhY3QtZG9tXCIpKTtcbmNvbnN0IEFwcF8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuL0FwcFwiKSk7XG5jb25zdCBDb250ZXh0XzEgPSByZXF1aXJlKFwiLi9Db250ZXh0XCIpO1xuY29uc3QgcmVwb3J0V2ViVml0YWxzXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4vcmVwb3J0V2ViVml0YWxzXCIpKTtcbnJlYWN0X2RvbV8xLmRlZmF1bHQucmVuZGVyKDxyZWFjdF8xLmRlZmF1bHQuU3RyaWN0TW9kZT5cbiAgICA8Q29udGV4dF8xLlF1aWNrc3RhcnRQcm92aWRlcj5cbiAgICAgIDxBcHBfMS5kZWZhdWx0IC8+XG4gICAgPC9Db250ZXh0XzEuUXVpY2tzdGFydFByb3ZpZGVyPlxuICA8L3JlYWN0XzEuZGVmYXVsdC5TdHJpY3RNb2RlPiwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJyb290XCIpKTtcbi8vIElmIHlvdSB3YW50IHRvIHN0YXJ0IG1lYXN1cmluZyBwZXJmb3JtYW5jZSBpbiB5b3VyIGFwcCwgcGFzcyBhIGZ1bmN0aW9uXG4vLyB0byBsb2cgcmVzdWx0cyAoZm9yIGV4YW1wbGU6IHJlcG9ydFdlYlZpdGFscyhjb25zb2xlLmxvZykpXG4vLyBvciBzZW5kIHRvIGFuIGFuYWx5dGljcyBlbmRwb2ludC4gTGVhcm4gbW9yZTogaHR0cHM6Ly9iaXQubHkvQ1JBLXZpdGFsc1xucmVwb3J0V2ViVml0YWxzXzEuZGVmYXVsdCgpO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxleUoyWlhKemFXOXVJam96TENKbWFXeGxJam9pYVc1a1pYZ3Vhbk1pTENKemIzVnlZMlZTYjI5MElqb2lJaXdpYzI5MWNtTmxjeUk2V3lJdUxpOHVMaTh1TGk4dUxpOXhkV2xqYTNOMFlYSjBMMlp5YjI1MFpXNWtMM055WXk5cGJtUmxlQzUwYzNnaVhTd2libUZ0WlhNaU9sdGRMQ0p0WVhCd2FXNW5jeUk2SWpzN096czdRVUZCUVN4clJFRkJNRUk3UVVGRE1VSXNNRVJCUVdsRE8wRkJRMnBETEdkRVFVRjNRanRCUVVONFFpeDFRMEZCSzBNN1FVRkRMME1zZDBWQlFXZEVPMEZCUldoRUxHMUNRVUZSTEVOQlFVTXNUVUZCVFN4RFFVTmlMRU5CUVVNc1pVRkJTeXhEUVVGRExGVkJRVlVzUTBGRFpqdEpRVUZCTEVOQlFVTXNORUpCUVd0Q0xFTkJRMnBDTzAxQlFVRXNRMEZCUXl4aFFVRkhMRU5CUVVNc1FVRkJSQ3hGUVVOT08wbEJRVUVzUlVGQlJTdzBRa0ZCYTBJc1EwRkRkRUk3UlVGQlFTeEZRVUZGTEdWQlFVc3NRMEZCUXl4VlFVRlZMRU5CUVVNc1JVRkRia0lzVVVGQlVTeERRVUZETEdOQlFXTXNRMEZCUXl4TlFVRk5MRU5CUVVNc1EwRkRhRU1zUTBGQlF6dEJRVVZHTERCRlFVRXdSVHRCUVVNeFJTdzJSRUZCTmtRN1FVRkROMFFzTUVWQlFUQkZPMEZCUXpGRkxIbENRVUZsTEVWQlFVVXNRMEZCUXlJc0luTnZkWEpqWlhORGIyNTBaVzUwSWpwYkltbHRjRzl5ZENCU1pXRmpkQ0JtY205dElGd2ljbVZoWTNSY0lqdGNibWx0Y0c5eWRDQlNaV0ZqZEVSUFRTQm1jbTl0SUZ3aWNtVmhZM1F0Wkc5dFhDSTdYRzVwYlhCdmNuUWdRWEJ3SUdaeWIyMGdYQ0l1TDBGd2NGd2lPMXh1YVcxd2IzSjBJSHNnVVhWcFkydHpkR0Z5ZEZCeWIzWnBaR1Z5SUgwZ1puSnZiU0JjSWk0dlEyOXVkR1Y0ZEZ3aU8xeHVhVzF3YjNKMElISmxjRzl5ZEZkbFlsWnBkR0ZzY3lCbWNtOXRJRndpTGk5eVpYQnZjblJYWldKV2FYUmhiSE5jSWp0Y2JseHVVbVZoWTNSRVQwMHVjbVZ1WkdWeUtGeHVJQ0E4VW1WaFkzUXVVM1J5YVdOMFRXOWtaVDVjYmlBZ0lDQThVWFZwWTJ0emRHRnlkRkJ5YjNacFpHVnlQbHh1SUNBZ0lDQWdQRUZ3Y0NBdlBseHVJQ0FnSUR3dlVYVnBZMnR6ZEdGeWRGQnliM1pwWkdWeVBseHVJQ0E4TDFKbFlXTjBMbE4wY21samRFMXZaR1UrTEZ4dUlDQmtiMk4xYldWdWRDNW5aWFJGYkdWdFpXNTBRbmxKWkNoY0luSnZiM1JjSWlsY2JpazdYRzVjYmk4dklFbG1JSGx2ZFNCM1lXNTBJSFJ2SUhOMFlYSjBJRzFsWVhOMWNtbHVaeUJ3WlhKbWIzSnRZVzVqWlNCcGJpQjViM1Z5SUdGd2NDd2djR0Z6Y3lCaElHWjFibU4wYVc5dVhHNHZMeUIwYnlCc2IyY2djbVZ6ZFd4MGN5QW9abTl5SUdWNFlXMXdiR1U2SUhKbGNHOXlkRmRsWWxacGRHRnNjeWhqYjI1emIyeGxMbXh2WnlrcFhHNHZMeUJ2Y2lCelpXNWtJSFJ2SUdGdUlHRnVZV3g1ZEdsamN5QmxibVJ3YjJsdWRDNGdUR1ZoY200Z2JXOXlaVG9nYUhSMGNITTZMeTlpYVhRdWJIa3ZRMUpCTFhacGRHRnNjMXh1Y21Wd2IzSjBWMlZpVm1sMFlXeHpLQ2s3WEc0aVhYMD0iXX0=