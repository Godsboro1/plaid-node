"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function (o, m, k, k2) {
    if (k2 === undefined)
        k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function () { return m[k]; } });
}) : (function (o, m, k, k2) {
    if (k2 === undefined)
        k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function (o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function (o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule)
        return mod;
    var result = {};
    if (mod != null)
        for (var k in mod)
            if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
                __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = __importStar(require("react"));
const Endpoint_1 = __importDefault(require("../Endpoint"));
const Context_1 = __importDefault(require("../../Context"));
const ProductTypesContainer_1 = __importDefault(require("./ProductTypesContainer"));
const dataUtilities_1 = require("../../dataUtilities");
const Products = () => {
    const { products } = react_1.useContext(Context_1.default);
    return (<ProductTypesContainer_1.default productType="Products">
      {products.includes("payment_initiation") && (<Endpoint_1.default endpoint="payment" name="Payment" categories={dataUtilities_1.paymentCategories} schema="/payment/get/" description="Retrieve information about your latest payment." transformData={dataUtilities_1.transformPaymentData}/>)}
      {products.includes("auth") && (<Endpoint_1.default endpoint="auth" name="Auth" categories={dataUtilities_1.authCategories} schema="/auth/get/" description="Retrieve account and routing numbers for checking and savings accounts." transformData={dataUtilities_1.transformAuthData}/>)}
      {products.includes("transactions") && (<Endpoint_1.default endpoint="transactions" name="Transactions" categories={dataUtilities_1.transactionsCategories} schema="/transactions/sync/" description="Retrieve transactions or incremental updates for credit and depository accounts." transformData={dataUtilities_1.transformTransactionsData}/>)}
      {products.includes("identity") && (<Endpoint_1.default endpoint="identity" name="Identity" categories={dataUtilities_1.identityCategories} schema="/identity/get/" description="Retrieve Identity information on file with the bank. Reduce
              fraud by comparing user-submitted data to validate identity." transformData={dataUtilities_1.transformIdentityData}/>)}
      {products.includes("assets") && (<Endpoint_1.default endpoint="assets" name="Assets" categories={dataUtilities_1.assetsCategories} schema="/assets_report/get/" description="Create and retrieve assets information an asset report" transformData={dataUtilities_1.transformAssetsData}/>)}
      {!products.includes("payment_initiation") && (<Endpoint_1.default endpoint="balance" name="Balance" categories={dataUtilities_1.balanceCategories} schema="/accounts/balance/get/" description="Check balances in real time to prevent non-sufficient funds
        fees." transformData={dataUtilities_1.transformBalanceData}/>)}
      {products.includes("investments") && (<>
        <Endpoint_1.default endpoint="holdings" name="Investments" categories={dataUtilities_1.investmentsCategories} schema="/investments/holdings/get/" description="Retrieve investment holdings on file with the bank,
        brokerage, or investment institution. Analyze over-exposure
        to market segments." transformData={dataUtilities_1.transformInvestmentsData}/>
      <Endpoint_1.default endpoint="investments_transactions" name="Investments Transactions" categories={dataUtilities_1.investmentsTransactionsCategories} schema="/investments/transactions/get" description="Retrieve investment transactions on file with the bank,
        brokerage, or investments institution." transformData={dataUtilities_1.transformInvestmentTransactionsData}/>
      <Endpoint_1.default endpoint="liabilities" name="Liabilities" categories={dataUtilities_1.liabilitiesCategories} schema="/liabilities/get" description="Retrieve liabilities and various details about an Item with loan or credit accounts." transformData={dataUtilities_1.transformLiabilitiesData}/>
      </>)}
      {products.includes("transfer") && (<Endpoint_1.default endpoint="transfer" name="Transfer" categories={dataUtilities_1.transferCategories} schema="/transfer/get/" description="Retrieve information about your latest ACH Transfer." transformData={dataUtilities_1.transformTransferData}/>)}
      {products.includes("income_verification") && (<Endpoint_1.default endpoint="/income/verification/paystubs" name="Income Paystubs" categories={dataUtilities_1.incomePaystubsCategories} schema="/income/verification/paystubs" description="(Deprecated) Retrieve information from the paystubs used for income verification" transformData={dataUtilities_1.transformIncomePaystubsData}/>)}
    </ProductTypesContainer_1.default>);
};
Products.displayName = "Products";
exports.default = Products;
//# sourceMappingURL=data:application/json;base64,