"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = __importDefault(require("react"));
const Identity_1 = __importDefault(require("./Identity"));
const index_module_scss_1 = __importDefault(require("./index.module.scss"));
const Table = (props) => {
    const maxRows = 15;
    // regular table
    const headers = props.categories.map((category, index) => (<th key={index} className={index_module_scss_1.default.headerField}>
      {category.title}
    </th>));
    const rows = props.data
        .map((item, index) => (<tr key={index} className={index_module_scss_1.default.dataRows}>
        {props.categories.map((category, index) => (<td key={index} className={index_module_scss_1.default.dataField}>
            {item[category.field]}
          </td>))}
      </tr>))
        .slice(0, maxRows);
    return props.isIdentity ? (<Identity_1.default data={props.data} categories={props.categories}/>) : (<table className={index_module_scss_1.default.dataTable}>
      <thead className={index_module_scss_1.default.header}>
        <tr className={index_module_scss_1.default.headerRow}>{headers}</tr>
      </thead>
      <tbody className={index_module_scss_1.default.body}>{rows}</tbody>
    </table>);
};
Table.displayName = "Table";
exports.default = Table;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9xdWlja3N0YXJ0L2Zyb250ZW5kL3NyYy9Db21wb25lbnRzL1RhYmxlL2luZGV4LnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLGtEQUEwQjtBQUcxQiwwREFBa0M7QUFFbEMsNEVBQXlDO0FBUXpDLE1BQU0sS0FBSyxHQUFHLENBQUMsS0FBWSxFQUFFLEVBQUU7SUFDN0IsTUFBTSxPQUFPLEdBQUcsRUFBRSxDQUFDO0lBQ25CLGdCQUFnQjtJQUNoQixNQUFNLE9BQU8sR0FBRyxLQUFLLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxDQUFDLFFBQVEsRUFBRSxLQUFLLEVBQUUsRUFBRSxDQUFDLENBQ3hELENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUFDLDJCQUFNLENBQUMsV0FBVyxDQUFDLENBQzVDO01BQUEsQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUNqQjtJQUFBLEVBQUUsRUFBRSxDQUFDLENBQ04sQ0FBQyxDQUFDO0lBRUgsTUFBTSxJQUFJLEdBQUcsS0FBSyxDQUFDLElBQUk7U0FDcEIsR0FBRyxDQUFDLENBQUMsSUFBb0IsRUFBRSxLQUFLLEVBQUUsRUFBRSxDQUFDLENBQ3BDLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUFDLDJCQUFNLENBQUMsUUFBUSxDQUFDLENBQ3pDO1FBQUEsQ0FBQyxLQUFLLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxDQUFDLFFBQW9CLEVBQUUsS0FBSyxFQUFFLEVBQUUsQ0FBQyxDQUNyRCxDQUFDLEVBQUUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQywyQkFBTSxDQUFDLFNBQVMsQ0FBQyxDQUMxQztZQUFBLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsQ0FDdkI7VUFBQSxFQUFFLEVBQUUsQ0FBQyxDQUNOLENBQUMsQ0FDSjtNQUFBLEVBQUUsRUFBRSxDQUFDLENBQ04sQ0FBQztTQUNELEtBQUssQ0FBQyxDQUFDLEVBQUUsT0FBTyxDQUFDLENBQUM7SUFFckIsT0FBTyxLQUFLLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUN4QixDQUFDLGtCQUFRLENBQUMsSUFBSSxDQUFDLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDLFVBQVUsQ0FBQyxDQUFDLEtBQUssQ0FBQyxVQUFVLENBQUMsRUFBRyxDQUM3RCxDQUFDLENBQUMsQ0FBQyxDQUNGLENBQUMsS0FBSyxDQUFDLFNBQVMsQ0FBQyxDQUFDLDJCQUFNLENBQUMsU0FBUyxDQUFDLENBQ2pDO01BQUEsQ0FBQyxLQUFLLENBQUMsU0FBUyxDQUFDLENBQUMsMkJBQU0sQ0FBQyxNQUFNLENBQUMsQ0FDOUI7UUFBQSxDQUFDLEVBQUUsQ0FBQyxTQUFTLENBQUMsQ0FBQywyQkFBTSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLEVBQUUsRUFBRSxDQUNoRDtNQUFBLEVBQUUsS0FBSyxDQUNQO01BQUEsQ0FBQyxLQUFLLENBQUMsU0FBUyxDQUFDLENBQUMsMkJBQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxFQUFFLEtBQUssQ0FDOUM7SUFBQSxFQUFFLEtBQUssQ0FBQyxDQUNULENBQUM7QUFDSixDQUFDLENBQUM7QUFFRixLQUFLLENBQUMsV0FBVyxHQUFHLE9BQU8sQ0FBQztBQUU1QixrQkFBZSxLQUFLLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5cbmltcG9ydCB7IERhdGFJdGVtLCBDYXRlZ29yaWVzIH0gZnJvbSBcIi4uLy4uL2RhdGFVdGlsaXRpZXNcIjtcbmltcG9ydCBJZGVudGl0eSBmcm9tIFwiLi9JZGVudGl0eVwiO1xuXG5pbXBvcnQgc3R5bGVzIGZyb20gXCIuL2luZGV4Lm1vZHVsZS5zY3NzXCI7XG5cbmludGVyZmFjZSBQcm9wcyB7XG4gIGRhdGE6IEFycmF5PERhdGFJdGVtPjtcbiAgY2F0ZWdvcmllczogQXJyYXk8Q2F0ZWdvcmllcz47XG4gIGlzSWRlbnRpdHk6IGJvb2xlYW47XG59XG5cbmNvbnN0IFRhYmxlID0gKHByb3BzOiBQcm9wcykgPT4ge1xuICBjb25zdCBtYXhSb3dzID0gMTU7XG4gIC8vIHJlZ3VsYXIgdGFibGVcbiAgY29uc3QgaGVhZGVycyA9IHByb3BzLmNhdGVnb3JpZXMubWFwKChjYXRlZ29yeSwgaW5kZXgpID0+IChcbiAgICA8dGgga2V5PXtpbmRleH0gY2xhc3NOYW1lPXtzdHlsZXMuaGVhZGVyRmllbGR9PlxuICAgICAge2NhdGVnb3J5LnRpdGxlfVxuICAgIDwvdGg+XG4gICkpO1xuXG4gIGNvbnN0IHJvd3MgPSBwcm9wcy5kYXRhXG4gICAgLm1hcCgoaXRlbTogRGF0YUl0ZW0gfCBhbnksIGluZGV4KSA9PiAoXG4gICAgICA8dHIga2V5PXtpbmRleH0gY2xhc3NOYW1lPXtzdHlsZXMuZGF0YVJvd3N9PlxuICAgICAgICB7cHJvcHMuY2F0ZWdvcmllcy5tYXAoKGNhdGVnb3J5OiBDYXRlZ29yaWVzLCBpbmRleCkgPT4gKFxuICAgICAgICAgIDx0ZCBrZXk9e2luZGV4fSBjbGFzc05hbWU9e3N0eWxlcy5kYXRhRmllbGR9PlxuICAgICAgICAgICAge2l0ZW1bY2F0ZWdvcnkuZmllbGRdfVxuICAgICAgICAgIDwvdGQ+XG4gICAgICAgICkpfVxuICAgICAgPC90cj5cbiAgICApKVxuICAgIC5zbGljZSgwLCBtYXhSb3dzKTtcblxuICByZXR1cm4gcHJvcHMuaXNJZGVudGl0eSA/IChcbiAgICA8SWRlbnRpdHkgZGF0YT17cHJvcHMuZGF0YX0gY2F0ZWdvcmllcz17cHJvcHMuY2F0ZWdvcmllc30gLz5cbiAgKSA6IChcbiAgICA8dGFibGUgY2xhc3NOYW1lPXtzdHlsZXMuZGF0YVRhYmxlfT5cbiAgICAgIDx0aGVhZCBjbGFzc05hbWU9e3N0eWxlcy5oZWFkZXJ9PlxuICAgICAgICA8dHIgY2xhc3NOYW1lPXtzdHlsZXMuaGVhZGVyUm93fT57aGVhZGVyc308L3RyPlxuICAgICAgPC90aGVhZD5cbiAgICAgIDx0Ym9keSBjbGFzc05hbWU9e3N0eWxlcy5ib2R5fT57cm93c308L3Rib2R5PlxuICAgIDwvdGFibGU+XG4gICk7XG59O1xuXG5UYWJsZS5kaXNwbGF5TmFtZSA9IFwiVGFibGVcIjtcblxuZXhwb3J0IGRlZmF1bHQgVGFibGU7XG4iXX0=